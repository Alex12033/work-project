{"version":3,"file":"sign_up_form.bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK;AACrD;AACA;AACA,sCAAsC;AACtC;AACA,6BAA6B,KAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,MAAM;AAC9D;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE,kBAAkB,EAAE,cAAc,IAAI;AAC3E;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB,6BAA6B,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,iCAAiC,GAAG;AACzJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA,uDAAuD;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;UCjMA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,mBAAmB,mBAAO,CAAC,kIAAgC;AAC3D;AACA,a","sources":["webpack:///./Users/Александр/OneDrive/Робочий стіл/recovery version/js/registration/client/sign-up.js","webpack:///webpack/bootstrap","webpack:///./Users/Александр/OneDrive/Робочий стіл/recovery version/js/entryWebPack/signUpForm.js"],"sourcesContent":["function signUp() {\r\n  let form = document.querySelector(\"form\");\r\n\r\n  let btn = document.querySelector(\".confirm-button\");\r\n\r\n  let loader = document.querySelector(\".loader-form\");\r\n\r\n  let msgAfterSignUp = document.querySelector(\".msg-after-registration\");\r\n\r\n  const accumulateErrorValidation = {\r\n    //this object gets flag true in each field after succssesfull validation each input\r\n    phone: false,\r\n    email: false,\r\n    password: false,\r\n    confirmPassword: false,\r\n    isRegistered: false,\r\n  };\r\n\r\n  function displayErrorMsg(display, elem, msg = \"\") {\r\n    let errorDiv = document.querySelector(\".error-msg\");\r\n\r\n    let input = document.querySelector(`[name=${elem}]`);\r\n    input.classList.add(\"error-input\");\r\n\r\n    errorDiv.style.display = display; //defolt in css display:none\r\n\r\n    errorDiv.innerHTML += `${msg} <br>`;\r\n\r\n    btn.classList.add(\"disabled-button\");\r\n    btn.setAttribute(\"disabled\", \"disabled\");\r\n\r\n    setTimeout(() => {\r\n      errorDiv.style.display = \"none\";\r\n      errorDiv.innerHTML = \"\";\r\n      input.classList.remove(\"error-input\");\r\n\r\n      btn.removeAttribute(\"disabled\", \"disabled\");\r\n      btn.classList.remove(\"disabled-button\");\r\n    }, 4000);\r\n  }\r\n\r\n  function validateEmptyInput(data) {\r\n    for (elem in data) {\r\n      //validation empty fields\r\n      if (data[elem] == false) {\r\n        displayErrorMsg(\"block\", elem, ` Please enter ${elem} fields `);\r\n      }\r\n    }\r\n  }\r\n\r\n  function validatePhoneNumber(data) {\r\n    let pattern = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\r\n\r\n    if (data[\"phone\"] !== false && pattern.test(data[\"phone\"])) {\r\n      accumulateErrorValidation.phone = true;\r\n    } else {\r\n      accumulateErrorValidation.phone = false;\r\n      displayErrorMsg(\"block\", \"phone\", \" Please enter correct phone \");\r\n    }\r\n  }\r\n\r\n  function validateEmail(data) {\r\n    let pattern =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if (pattern.test(data[\"email\"])) {\r\n      accumulateErrorValidation.email = true;\r\n    } else {\r\n      accumulateErrorValidation.email = false;\r\n      displayErrorMsg(\"block\", \"email\", \" Please enter correct email \");\r\n    }\r\n  }\r\n\r\n  function validatePassword(data) {\r\n    if (\r\n      data[\"password\"] !== false &&\r\n      data[\"confirmPassword\"] !== false &&\r\n      data[\"password\"] === data[\"confirmPassword\"]\r\n    ) {\r\n      accumulateErrorValidation.password = true;\r\n      accumulateErrorValidation.confirmPassword = true;\r\n    } else {\r\n      accumulateErrorValidation.password = false;\r\n      accumulateErrorValidation.confirmPassword = false;\r\n      displayErrorMsg(\r\n        \"block\",\r\n        \"confirmPassword\",\r\n        \"PLease enter the same password\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async function postData(data) {\r\n    btn.classList.add(\"disabled-button\");\r\n    loader.style.display = \"block\";\r\n    //http://localhost:3000/login\r\n    //https://work-project-62855.web.app/js/registration/server/server.js/login\r\n    const response = await fetch(\r\n      \"https://62cddbfda43bf780085fe7b3.mockapi.io/login\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        alert(\"Bad request \", response.status, response.statusText);\r\n\r\n        loader.classList.add(\"hide-loader\");\r\n        btn.classList.remove(\"disabled-button\");\r\n        return;\r\n      }\r\n\r\n      if (response.ok) {\r\n        loader.classList.add(\"hide-loader\");\r\n        msgAfterSignUp.style.display = \"block\";\r\n\r\n        setTimeout(() => {\r\n          window.location.href =\r\n            \"https://work-project-62855.web.app/pages/form-registration/login/index.html\";\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  async function isRegisteredChecker(inputEmail) {\r\n    let users = [];\r\n    let flag = false;\r\n\r\n    await fetch(\"https://62cddbfda43bf780085fe7b3.mockapi.io/login\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        users = data;\r\n\r\n        users.map((user) => {\r\n          if (user[\"email\"] === inputEmail && user[\"email\"] != false) {\r\n            console.log(user[\"email\"], inputEmail, \"the same\");\r\n            accumulateErrorValidation.isRegistered = false;\r\n            flag = true;\r\n          } else {\r\n            console.log(user[\"email\"], inputEmail, \"not same\");\r\n            flag = false;\r\n            accumulateErrorValidation.isRegistered = true;\r\n          }\r\n        });\r\n      });\r\n    flag && displayErrorMsg(\"block\", \"email\", \"This email already use !\");\r\n  }\r\n\r\n  btn.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n\r\n    const fields = document.querySelectorAll(\"input\");\r\n    var valuesInput = {};\r\n\r\n    fields.forEach((field) => {\r\n      const { name, value } = field;\r\n\r\n      valuesInput[name] = value == \"\" ? false : value; //if input empty we save false in object else we save value of input\r\n    });\r\n\r\n    isRegisteredChecker(valuesInput[\"email\"]);\r\n    validateEmptyInput(valuesInput);\r\n    validatePhoneNumber(valuesInput);\r\n    validateEmail(valuesInput);\r\n    validatePassword(valuesInput);\r\n\r\n    //if validate successfull then post data on server\r\n    if (\r\n      valuesInput[\"name\"] != false &&\r\n      valuesInput[\"surName\"] != false &&\r\n      valuesInput[\"phone\"] != false &&\r\n      accumulateErrorValidation.phone == true &&\r\n      valuesInput[\"email\"] != false &&\r\n      accumulateErrorValidation.email == true &&\r\n      valuesInput[\"password\"] != false &&\r\n      accumulateErrorValidation.password == true &&\r\n      valuesInput[\"confirmPassword\"] != false &&\r\n      accumulateErrorValidation.confirmPassword == true &&\r\n      accumulateErrorValidation.isRegistered == true\r\n    ) {\r\n      console.log(accumulateErrorValidation.isRegistered);\r\n      postData(valuesInput);\r\n    } else {\r\n      console.log(accumulateErrorValidation);\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = signUp;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const signUpForm = require(\"../registration/client/sign-up\");\r\n\r\nsignUpForm();"],"names":[],"sourceRoot":""}